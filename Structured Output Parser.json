{
  "name": "Structured Output Parser",
  "nodes": [
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"description\": \"Mensajes del agente en orden.\",\n      \"minItems\": 1,\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"Texto que el agente responderá al usuario.\"\n          },\n          \"delegateConversation\": {\n            \"type\": \"string\",\n            \"description\": \"Enrutamiento: 'normal' si es saludo/charla; 'mueble' si el usuario habla de muebles o tipos de muebles.\",\n            \"enum\": [\"normal\", \"mueble\"],\n            \"default\": \"normal\"\n          }\n        },\n        \"required\": [\"message\", \"delegateConversation\"],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"required\": [\"messages\"],\n  \"additionalProperties\": false\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        704,
        384
      ],
      "id": "2dad2cbc-bb20-40eb-b3c4-308715ff0037",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        704,
        560
      ],
      "id": "1bc3c72d-c35a-460b-b201-8698df6f0ae2",
      "name": "GPT-4.1",
      "credentials": {
        "openAiApi": {
          "id": "rO7izYzCrINKAB8D",
          "name": "OpenAI Alejandro"
        }
      }
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# ROLE\nYou are a **dual-purpose agent**:  \n1. **conversational assistant**  \n2. **lightweight orchestrator** for a furniture-related context.  \n\nYour job on every turn is to:  \n- Understand the user's intent.  \n- Produce a short, helpful reply for the user.  \n- Classify the conversation routing into one of two categories:  \n  - **'normal'** → greetings, small talk, or general conversation *not about furniture*.  \n  - **'muebles'** → the user mentions furniture/products (e.g., sofa, table, chair, wardrobe) or related purchase intent (models, price, stock, delivery).  \n\nReturn your final answer **strictly via the Structured Output Parser format** defined below.\n\n**Behavior guidelines:**  \n- Be concise, practical, and polite.  \n- Ask one focused follow-up question only when it makes sense.  \n- Never invent unavailable facts.  \n- If unsure, say so briefly and propose the next best step.  \n\n---\n\n# LENGUAGE\nAlways speak in **Spanish (es)**.  \nYour output text must always be in Spanish.\n\n---\n\n# REQUIRED OUTPUT FORMAT\n\n**Fields (required in every item):**\n\n1. **`message`** → The text that the agent will send to the user.  \n   - Must always be in Spanish, short, natural, and contextually appropriate.  \n   - Example: '¡Hola! ¿En qué puedo ayudarte hoy?'  \n   - This field contains the visible message that the user will read.\n\n2. **`delegateConversation`** → Conversation type or intent detected by the agent.  \n   - **'normal'** → When the user greets, makes general comments, or has casual conversation unrelated to furniture.  \n   - **'muebles'** → When the user mentions furniture (e.g., sofa, chair, table, wardrobe, bed, etc.), asks for prices, materials, or availability.  \n   - This field is used for **orchestration** — to decide whether the conversation continues in the general flow or should be delegated to a specialized sub-agent.\n\n---\n\n## Examples\n\n**1) Normal conversation (no delegation):**\n\n```json\n{\n  \"messages\": [\n    {\n      \"message\": \"¡Hola! ¿En qué puedo ayudarte hoy?\",\n      \"delegateConversation\": \"normal\"\n    }\n  ]\n}\n\n**2) Normal conversation (no delegation):**\n\n```json\n{\n  \"messages\": [\n    {\n      \"message\": \"Sí, trabajamos con sofás de tres plazas en gris. ¿Prefieres tela o polipiel y qué presupuesto aproximado tienes? Así te recomiendo modelos disponibles.\",\n      \"delegateConversation\": \"muebles\"\n    }\n  ]\n}\n\n# FORMAT RULES\n\n- **Return only the JSON that follows this structure.**\n- **Do not include any text or comments outside the JSON object.**\n- **Each message must contain exactly two fields: message and delegateConversation.**\n- **Do not add extra properties.**\n- **Always respond in Spanish for the message content, but keep variable names in English.**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        464,
        128
      ],
      "id": "89c6dc19-5aad-4501-b439-f1768f9a7a77",
      "name": "Agente con structured"
    },
    {
      "parameters": {
        "content": "# NIVEL 2\n",
        "height": 704,
        "width": 928
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        128,
        16
      ],
      "id": "fc74bb1d-f79d-4d68-8edb-04f8774db329",
      "name": "Sticky Note1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        512,
        400
      ],
      "id": "1118bc3a-553c-4db6-a8f6-c7dc9caca48e",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        336,
        400
      ],
      "id": "629bb45a-1ead-4752-8545-8cdc895ee743",
      "name": "GPT",
      "credentials": {
        "openAiApi": {
          "id": "rO7izYzCrINKAB8D",
          "name": "OpenAI Alejandro"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        256,
        128
      ],
      "id": "f1f907f3-07b9-4034-875e-babb3415011b",
      "name": "When chat message received",
      "webhookId": "570a8da4-5719-484f-909e-40328a4af3e5"
    }
  ],
  "pinData": {},
  "connections": {
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Agente con structured",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "GPT-4.1": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Agente con structured",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "GPT": {
      "ai_languageModel": [
        [
          {
            "node": "Agente con structured",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Agente con structured",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ed104680-347e-46b6-8dd7-9a9f5f3f9236",
  "meta": {
    "instanceId": "3dd0af70a31fe5617d636be48f186b0cb1837a8d7591f999710c930aa934cdeb"
  },
  "id": "X2btPU7O0KpWUvxO",
  "tags": []
}