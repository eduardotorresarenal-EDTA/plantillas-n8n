version: "3.8"

services:
  flowise-db:
    image: postgres:16-alpine
    networks:
      - dokploy-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - flowise-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  flowise:
    image: flowiseai/flowise:3.0.2
    depends_on:
      flowise-db:
        condition: service_healthy
    networks:
      - dokploy-network
    volumes:
      - flowiseai:/root/.flowise
    environment:
      PORT: ${PORT}
      FLOWISE_DOMAIN: ${FLOWISE_DOMAIN}
      FLOWISE_USERNAME: ${FLOWISE_USERNAME}
      FLOWISE_PASSWORD: ${FLOWISE_PASSWORD}
      DATABASE_TYPE: postgres
      DATABASE_HOST: flowise-db
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DEBUG: "false"
      LOG_LEVEL: info
      LOG_PATH: /root/.flowise/logs
    entrypoint: /bin/sh -c "sleep 3 && flowise start"
    restart: on-failure:5
    healthcheck:
      test: ["CMD-SHELL","wget --no-verbose --tries=1 --spider http://localhost:${PORT}"]
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.flowise.rule=Host(`${FLOWISE_DOMAIN}`)'
      - "traefik.http.routers.flowise.entrypoints=websecure"
      - "traefik.http.routers.flowise.tls.certResolver=letsencrypt"
      - "traefik.http.services.flowise.loadbalancer.server.port=${PORT}"

volumes:
  flowiseai:
  flowise-db-data:

networks:
  dokploy-network:
    external: true